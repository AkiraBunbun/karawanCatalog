---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + (subpath?.[0] || '');
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<font><slot /></font>
</a>
<style>
	a::before{
		content: attr(data-name);
		display: flex;
		justify-content: center;
		align-items: center;
		position: absolute;
		width: 100%;
		height: 100%;
		left: 0;
		top: 0;
		transform: blur(20px);
		z-index: 0;
	}
	a {
		position: relative;
		display: inline-block;
		text-decoration: none;
	}
	a.active {
		position: relative;
		font-weight: bolder;
		text-decoration: underline;
	}
</style>
